apiVersion: v1
kind: Namespace
metadata:
  name: visualization
spec: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: visualization
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  strategy: {}
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
        - name: grafana-dashboard-provider
          configMap:
            defaultMode: 420
            name: grafana-dashboard-provider
        - name: grafana-dashboards
          configMap:
            defaultMode: 420
            name: grafana-dashboards
        - name: grafana-datasources
          configMap:
            defaultMode: 420
            name: grafana-datasources
      containers:
        - image: grafana/grafana:9.4.3
          name: grafana
          env:
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: "Admin"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_BASIC_ENABLED
              value: "false"
          volumeMounts:
            - mountPath: /var/lib/grafana/dashboards
              name: grafana-dashboards
            - mountPath: /etc/grafana/provisioning/dashboards
              name: grafana-dashboard-provider
              readOnly: false
            - mountPath: /etc/grafana/provisioning/datasources
              name: grafana-datasources
              readOnly: false
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: visualization
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: grafana